import sys,argparseimport os,glob,reimport numpy as npimport pandas as pd#from GenomeData import *import matplotlib# matplotlib.use('Agg')import matplotlib.pyplot as pltmatplotlib.rcParams['font.size']=13matplotlib.rcParams["font.sans-serif"] = ["Arial", "Liberation Sans", "Bitstream Vera Sans"]matplotlib.rcParams["font.family"] = "sans-serif"import seaborn as snssns.set(font_scale=1)sns.set_style("whitegrid", {'axes.grid' : False})sns.set_style("ticks")from matplotlib_venn import venn3,venn2from scipy import statsimport warningswarnings.filterwarnings("ignore")def add_overlap_info(outdf,indir,prename):    # == add overlap count info for each TF    infile = '{}/atac_overlap_{}.bed'.format(indir,prename)    if os.path.isfile(infile):        print(prename)        df = pd.read_csv(infile,header=None,sep='\t')        df.columns = ['chr','start','end','id','score','annotation',prename]        outdf = pd.concat([outdf,df[prename]],axis=1)    return outdf# mergefile_dir = '../../f1_TF_cluster_potential/f3_clustered_TFBS/f0_TFBS_merge/'tfbs_dir = '../../f1_TF_cluster_potential/f2_cor_CP_SE_AICAP/f3_TFBS_CP_heatmap/_csv'   tfbs_cp_types = ['CP_TFBS_vs_TFMS',                 'CP_TFBS_overlap_motif_vs_TFMS',                 'CP_TFBS_NOT_overlap_motif_vs_TFMS']name_match = pd.read_excel('../../data/TCGA/TCGA-ATAC_SE_cancerType_match.xlsx',index_col=0)   name_match = name_match.dropna()atac_file = '../../data/TCGA/tcga_atac.bed'indir = 'f5_diff_ATAC_overlap_TFBS'outdir = 'f6_diff_ATAC_overlap_TFBS_data'os.makedirs(outdir,exist_ok=True)for tfbs_cp_type in tfbs_cp_types[:1]:    tfbs_cp_s = pd.read_csv('{}/data_fisher_{}_CP_RankSum_statistics.csv'.format(tfbs_dir,tfbs_cp_type),index_col=0)        # for ct in ['MCF-7','HCT-116','HeLa','LNCaP','U87'][:2]:    for cancertype in name_match.index[:3]:        ct = name_match.loc[cancertype].SE        diff_file = 'f2_diff_ATAC_each_CancerType/{}_diff_atac.csv'.format(cancertype)        outdf = pd.read_csv(diff_file,sep='\t')        outdf = outdf[['#seqnames', 'start', 'end', 'name', 'stats', 'pvalue']]                # ==== add overlap info per TF        factors = tfbs_cp_s[ct].dropna().index                for factor in factors[:]:                                    # == TFBS and TF overlap SE            prename = '{}_{}'.format(ct,factor)            outdf = add_overlap_info(outdf,indir,prename)            prename = '{}_{}_overlap_SE'.format(ct,factor)            outdf = add_overlap_info(outdf,indir,prename)            prename = '{}_{}_percentile5'.format(ct,factor)            outdf = add_overlap_info(outdf,indir,prename)        # == overlap with SE        prename = '{}_SE'.format(ct,factor)        outdf = add_overlap_info(outdf,indir,prename)                    outdf.to_csv('{}/{}_overlap_TFBS.csv'.format(outdir,ct),index=False)            