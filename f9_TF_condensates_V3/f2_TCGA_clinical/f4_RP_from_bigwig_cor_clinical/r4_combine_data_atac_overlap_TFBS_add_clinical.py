import sys,argparseimport os,glob,reimport numpy as npimport pandas as pd#from GenomeData import *import matplotlib# matplotlib.use('Agg')import matplotlib.pyplot as pltmatplotlib.rcParams['font.size']=13matplotlib.rcParams["font.sans-serif"] = ["Arial", "Liberation Sans", "Bitstream Vera Sans"]matplotlib.rcParams["font.family"] = "sans-serif"import seaborn as snssns.set(font_scale=1)sns.set_style("whitegrid", {'axes.grid' : False})sns.set_style("ticks")from matplotlib_venn import venn3,venn2from scipy import statsimport warningswarnings.filterwarnings("ignore")def add_logrank_info(out_df,df,index,cp_fig=False):    df_p = df[df['log rank p']<p_thre]    df_pt = df[(df['treat time']<df['ctrl time'])&(df['log rank p']<p_thre)]    out_df.loc[index,'total'] = df.shape[0]    out_df.loc[index,'#P<{}'.format(p_thre)] = df_p.shape[0]    out_df.loc[index,'%P<{}'.format(p_thre)] = np.round(df_p.shape[0]/df.shape[0],4)    out_df.loc[index,'#TreatTime<CtrlTime&P<{}'.format(p_thre)] = df_pt.shape[0]    out_df.loc[index,'%TreatTime<CtrlTime&P<{}'.format(p_thre)] = np.round(df_pt.shape[0]/df.shape[0],4)    df[['#seqnames','start','end']].to_csv('{}/_csv/{}.bed'.format(outdir,index),sep='\t',header=None,index=False)    df_p[['#seqnames','start','end']].to_csv('{}/_csv/{}.p.bed'.format(outdir,index),sep='\t',header=None,index=False)    return out_df# mergefile_dir = '../../f1_TF_cluster_potential/f3_clustered_TFBS/f0_TFBS_merge/'tfbs_dir = '../../f1_TF_cluster_potential/f2_cor_CP_SE_AICAP/f3_TFBS_CP_heatmap/_csv'   tfbs_cp_types = ['CP_TFBS_vs_TFMS',                 'CP_TFBS_overlap_motif_vs_TFMS',                 'CP_TFBS_NOT_overlap_motif_vs_TFMS']name_match = pd.read_excel('../../data/TCGA/TCGA-ATAC_SE_cancerType_match.xlsx',index_col=0)   name_match = name_match.dropna()# atac_file = '../../data/TCGA/tcga_atac.bed'tfbs_overlap_dir='../f1_diff_ATAC_overlap_SE/f6_diff_ATAC_overlap_TFBS_data/'p_thre = 0.05outdir = 'r4_combine_data_add_clinical_by_score'os.makedirs(outdir+os.sep+'_csv',exist_ok=True)for tfbs_cp_type in tfbs_cp_types[:1]:    tfbs_cp_s = pd.read_csv('{}/data_fisher_{}_CP_RankSum_statistics.csv'.format(tfbs_dir,tfbs_cp_type),index_col=0)        # for ct in ['MCF-7','HCT-116','HeLa','LNCaP','U87'][:2]:    for cancertype in ['BRCA','COAD'][:]:        ct = name_match.loc[cancertype].SE        # ==== atac-seq peak overlap w/ TFBS        df_overlap = pd.read_csv('{}/{}_overlap_TFBS.csv'.format(tfbs_overlap_dir,ct),index_col=3)        # ==== atac-seq peak survival by RP        # df_clinical = pd.read_csv('f3_clinical_per_region/{}_tcga_atac_logrank_info.csv'.format(cancertype),index_col=0)                df_clinical = pd.read_csv('../../..//f7_TF_condensates_test/f6_revised_TCGA_ATAC_cor_SE/f2_clinical_hicor_atac_peaks/f1_clinical_at_each_peak/f2_caseID_each_peak_vs_clinical/{}_logrank_info.csv'.format(cancertype),index_col=0)                df = pd.concat([df_clinical,df_overlap],axis=1)            df.to_csv('{}/{}_data_add_clinical.csv'.format(outdir,cancertype))                # ==== statistics of peaks cor clinical outcomes        out_df = pd.DataFrame()        out_df = add_logrank_info(out_df,df,'All TCGA-peaks')                    # ==== overlap w/ SE        se_colname = '{}_SE'.format(ct)        df_tmp = df[df[se_colname]!=0]        out_df = add_logrank_info(out_df,df_tmp,se_colname)                # ==== add overlap info per TF        factors = tfbs_cp_s[ct].dropna().index                co_factors = []        for factor in factors[:]:                                    # print(factor)            prename = '{}_{}'.format(ct,factor)            df_tmp = df[df[prename]!=0]            out_df = add_logrank_info(out_df,df_tmp,prename)            prename = '{}_{}_overlap_SE'.format(ct,factor)            df_tmp = df[df[prename]!=0]            out_df = add_logrank_info(out_df,df_tmp,prename)            prename = '{}_{}_percentile5'.format(ct,factor)            if prename in df.columns:                co_factors.append(factor)                df_tmp = df[df[prename]!=0]                out_df = add_logrank_info(out_df,df_tmp,prename)                df_tmp = df[(df[prename]!=0)&(df[se_colname]!=0)]                out_df = add_logrank_info(out_df,df_tmp,'{}+SE'.format(prename))                        # ==== check the co-binding factors        prenames = ['{}_{}_percentile5'.format(ct,factor) for factor in co_factors]        df_tmp = df[np.sign(df[prenames]).sum(axis=1)==len(prenames)]        out_df = add_logrank_info(out_df,df_tmp,'{} binding'.format('-'.join(co_factors)))        df_tmp = df_tmp[df_tmp[se_colname]!=0]        out_df = add_logrank_info(out_df,df_tmp,'{} binding +SE'.format('-'.join(co_factors)))                        out_df.to_csv('{}/{}_statistics.csv'.format(outdir,cancertype))