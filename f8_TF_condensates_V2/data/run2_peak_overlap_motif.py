import sys,argparseimport os,globimport numpy as npimport pandas as pdimport re,bisectoutdir1 = 'peaks_overlap_motif'outdir2 = 'peaks_NOT_overlap_motif'os.makedirs(outdir1,exist_ok=True)os.makedirs(outdir2,exist_ok=True)# ==== keep high quality datapeak_dir = '/nv/vol190/zanglab/zw5j/data/cistrome/cistrome_db_2019_new/human_factor'# peak_dir = '/Volumes/zanglab/zw5j/data/cistrome/cistrome_db_2019_new/human_factor'df_qc = pd.read_csv('cistrome2019_selected_QC.csv',index_col=0)           # ==== read peak data with matched motif and SE motif_dir="/nv/vol190/zanglab/shared/Motif/sites/hg38_fimo_jarspar/results/"# motif_dir="/Volumes/zanglab/shared/Motif/sites/hg38_fimo_jarspar/results/"df_count = pd.read_csv('cistrome2019_data_Count_with_SE_motif.csv',index_col=0)# ==== get peaks with/without overlap with motiffor factor in df_count.index[:]:    motif_files = glob.glob('{}/{}_*.bed'.format(motif_dir,factor))    motif_files = [i for i in motif_files if not re.search('~',i)]    assert len(motif_files)==1    for celltype in df_count.columns[:]:        if df_count.loc[factor,celltype]==0:            continue        df_tmp = df_qc[(df_qc.Factor==factor)&(df_qc.Cell_line==celltype)]        for dcID in df_tmp.index:            peak_file = '{}/{}_sort_peaks.narrowPeak.bed'.format(peak_dir,dcID)            motif_file = motif_files[0]            output_bed = '{}_{}_{}.bed'.format(dcID,factor,celltype)            # commandLine = 'python find_overlap_keep_info_NOT_sep_strand.py -s hg38 \            # -a {} -b {} -p {}/{} -q {}/{}\n'.format(peak_file,motif_file,outdir1,output_bed,outdir2,output_bed)            commandLine = 'bedtools intersect -a {} -b {} -wa -u > {}/{}'.format(peak_file,motif_file,outdir1,output_bed)            os.system(commandLine);print(commandLine)            commandLine = 'bedtools intersect -a {} -b {} -wa -v > {}/{}\n'.format(peak_file,motif_file,outdir2,output_bed)            os.system(commandLine);print(commandLine)                            